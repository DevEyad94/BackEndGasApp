import './polyfills.server.mjs';
import{a as q}from"./chunk-K3MOAMR4.mjs";import{l as z}from"./chunk-E44DUL6C.mjs";import{b as K,c as U,d as J}from"./chunk-MHCTP4LA.mjs";import{d as V,e as $,h as G,i as B,j,p as Q,q as W,r as H}from"./chunk-444SJH6C.mjs";import{a as Z}from"./chunk-KLHXEL3F.mjs";import"./chunk-VORNBINK.mjs";import{Fa as l,Ka as h,P as I,Pa as C,U as E,Ua as f,aa as S,ba as b,bb as d,ca as v,fb as n,gb as i,hb as u,ka as O,kb as _,lb as y,mb as p,ob as D,oc as L,pb as A,pc as F,qb as Y,rb as r,sb as c,ta as P,tb as N,tc as M,v as k,wc as R}from"./chunk-IILPPODV.mjs";import"./chunk-OFHM46N5.mjs";function oe(o,g){if(o&1&&(n(0,"div",13)(1,"div",6)(2,"div",7),u(3,"app-zsk-select",14)(4,"app-zsk-select",15),i(),n(5,"div",7),u(6,"app-zsk-select",16)(7,"div"),i()(),n(8,"div",6)(9,"div",7),u(10,"app-text-input",17)(11,"app-text-input",18),i()()()),o&2){let e=p();l(3),d("options",e.yearOptions),l(),d("options",e.yearOptions),l(2),d("options",e.maintenanceTypeOptions)}}var ee=(()=>{class o{fb;filtersChanged=new O;maintenanceTypes=[];fields=[];maintenanceTypeOptions=[];fieldOptions=[];yearOptions=[];filterForm;years=[];showAdvancedFilters=!1;constructor(e){this.fb=e;let a=new Date().getFullYear();for(let t=0;t<30;t++)this.years.push(a-t)}ngOnInit(){this.initForm(),this.prepareYearOptions()}ngOnChanges(e){e.maintenanceTypes&&this.maintenanceTypes&&this.prepareMaintenanceTypeOptions(),e.fields&&this.fields&&this.prepareFieldOptions()}prepareYearOptions(){this.yearOptions=this.years.map(e=>({value:e,label:e.toString()}))}prepareMaintenanceTypeOptions(){console.log("Setting maintenance type options:",this.maintenanceTypes),this.maintenanceTypeOptions=this.maintenanceTypes.map(e=>({value:e.id,label:e.name}))}prepareFieldOptions(){console.log("Setting field options:",this.fields),this.fieldOptions=this.fields}initForm(){this.filterForm=this.fb.group({minProductionRate:[null],maxProductionRate:[null],extractionYear:[null],fromYear:[null],toYear:[null],maintenanceTypeId:[null],minCost:[null],maxCost:[null],fieldId:[null]}),this.filterForm.valueChanges.subscribe(e=>{this.filtersChanged.emit(e)})}toggleAdvancedFilters(){this.showAdvancedFilters=!this.showAdvancedFilters}clearFilters(){this.filterForm.reset()}static \u0275fac=function(a){return new(a||o)(h(Q))};static \u0275cmp=C({type:o,selectors:[["app-map-filter"]],inputs:{maintenanceTypes:"maintenanceTypes",fields:"fields"},outputs:{filtersChanged:"filtersChanged"},features:[S],decls:18,vars:5,consts:[[1,"bg-white","dark:bg-gray-700","rounded-lg","shadow","p-4","mb-4"],[1,"flex","justify-between","items-center","mb-4"],[1,"text-xl","font-semibold","text-gray-800","dark:text-white"],["type","button",1,"text-blue-600","hover:text-blue-800","dark:text-blue-400","dark:hover:text-blue-300","mr-2",3,"click"],["type","button",1,"text-red-600","hover:text-red-800","dark:text-red-400","dark:hover:text-red-300",3,"click"],[1,"space-y-4",3,"formGroup"],[1,"grid","md:grid-cols-2","gap-4"],[1,"grid","grid-cols-2","gap-2"],["formControlName","minProductionRate","type","number","label","Min Production Rate","placeholder","Minimum rate","id","minProductionRate","name","minProductionRate","inputMode","numeric"],["formControlName","maxProductionRate","type","number","label","Max Production Rate","placeholder","Maximum rate","id","maxProductionRate","name","maxProductionRate","inputMode","numeric"],["formControlName","extractionYear","label","Extraction Year","id","extractionYear","name","extractionYear","placeholder","All Years",3,"options"],["formControlName","fieldId","label","Field","id","fieldId","name","fieldId","placeholder","All Fields",3,"options"],["class","space-y-4",4,"ngIf"],[1,"space-y-4"],["formControlName","fromYear","label","From Year","id","fromYear","name","fromYear","placeholder","Any Year",3,"options"],["formControlName","toYear","label","To Year","id","toYear","name","toYear","placeholder","Any Year",3,"options"],["formControlName","maintenanceTypeId","label","Maintenance Type","id","maintenanceTypeId","name","maintenanceTypeId","placeholder","All Types",3,"options"],["formControlName","minCost","type","number","label","Min Cost","placeholder","Minimum cost","id","minCost","name","minCost","inputMode","numeric"],["formControlName","maxCost","type","number","label","Max Cost","placeholder","Maximum cost","id","maxCost","name","maxCost","inputMode","numeric"]],template:function(a,t){a&1&&(n(0,"div",0)(1,"div",1)(2,"h2",2),r(3,"Filter Fields"),i(),n(4,"div")(5,"button",3),y("click",function(){return t.toggleAdvancedFilters()}),r(6),i(),n(7,"button",4),y("click",function(){return t.clearFilters()}),r(8," Clear Filters "),i()()(),n(9,"form",5)(10,"div",6)(11,"div",7),u(12,"app-text-input",8)(13,"app-text-input",9),i(),n(14,"div",7),u(15,"app-zsk-select",10)(16,"app-zsk-select",11),i()(),f(17,oe,12,3,"div",12),i()()),a&2&&(l(6),N(" ",t.showAdvancedFilters?"Hide Advanced":"Show Advanced"," "),l(3),d("formGroup",t.filterForm),l(6),d("options",t.yearOptions),l(),d("options",t.fieldOptions),l(),d("ngIf",t.showAdvancedFilters))},dependencies:[M,F,W,G,V,$,H,B,j,K,U],styles:[`input[_ngcontent-%COMP%]:focus, select[_ngcontent-%COMP%]:focus{outline:none;box-shadow:0 0 0 2px #3b82f680}input[type=number][_ngcontent-%COMP%]::-webkit-inner-spin-button, input[type=number][_ngcontent-%COMP%]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}input[type=number][_ngcontent-%COMP%]{-moz-appearance:textfield}
/*# sourceMappingURL=map-filter.component-AMGEBEOQ.css.map */`]})}return o})();var te=(()=>{class o{platformId;API_KEY=Z.googleMapsApiKey;isLoaded=!1;loadingPromise=null;isBrowser;constructor(e){this.platformId=e,this.isBrowser=R(this.platformId)}loadApi(){return!this.isBrowser||this.isLoaded?Promise.resolve():this.loadingPromise?this.loadingPromise:(this.loadingPromise=new Promise((e,a)=>{let t=window;if(t.google&&t.google.maps){this.isLoaded=!0,e();return}let s="googleMapsApiLoaded";t[s]=()=>{this.isLoaded=!0,e(),delete t[s]};let m=document.createElement("script");m.async=!0,m.defer=!0,m.src=`https://maps.googleapis.com/maps/api/js?key=${this.API_KEY}&callback=${s}&libraries=places,marker&loading=async`,m.onerror=x=>{a(new Error("Failed to load Google Maps API: "+x))},document.head.appendChild(m)}),this.loadingPromise)}static \u0275fac=function(a){return new(a||o)(E(P))};static \u0275prov=I({token:o,factory:o.\u0275fac,providedIn:"root"})}return o})();var le=["mapContainer"];function se(o,g){if(o&1){let e=_();n(0,"app-map-filter",12),y("filtersChanged",function(t){b(e);let s=p();return v(s.onFiltersChanged(t))}),i()}if(o&2){let e=p();d("maintenanceTypes",e.maintenanceTypes)("fields",e.fieldOptions)}}function de(o,g){if(o&1){let e=_();n(0,"tr",18)(1,"td",19),r(2),i(),n(3,"td",20),r(4),i(),n(5,"td",19),r(6),i(),n(7,"td",19),r(8),i(),n(9,"td",19)(10,"button",21),y("click",function(){let t=b(e).$implicit,s=p(2);return v(s.navigateToFieldDetails(t.fieldId))}),r(11," View Details "),i()()()}if(o&2){let e=g.$implicit;l(2),c(e.fieldId),l(2),c(e.fieldName),l(2),c(e.latitude.toFixed(6)),l(2),c(e.longitude.toFixed(6))}}function me(o,g){if(o&1&&(n(0,"table",13)(1,"thead",14)(2,"tr")(3,"th",15),r(4,"Field ID"),i(),n(5,"th",15),r(6,"Name"),i(),n(7,"th",15),r(8,"Latitude"),i(),n(9,"th",15),r(10,"Longitude"),i(),n(11,"th",15),r(12,"Actions"),i()()(),n(13,"tbody",16),f(14,de,12,4,"tr",17),i()()),o&2){let e=p();l(14),d("ngForOf",e.dashboardFields)}}function pe(o,g){if(o&1){let e=_();n(0,"tr",18)(1,"td",19),r(2),i(),n(3,"td",20),r(4),i(),n(5,"td",19),r(6),i(),n(7,"td",19),r(8),i(),n(9,"td",19)(10,"button",21),y("click",function(){let t=b(e).$implicit,s=p(2);return v(s.navigateToFieldDetails(t.zFieldId))}),r(11," View Details "),i()()()}if(o&2){let e=g.$implicit;l(2),c(e.zFieldId),l(2),c(e.name),l(2),c(e.latitude.toFixed(6)),l(2),c(e.longitude.toFixed(6))}}function ce(o,g){if(o&1&&(n(0,"table",13)(1,"thead",14)(2,"tr")(3,"th",15),r(4,"Field ID"),i(),n(5,"th",15),r(6,"Name"),i(),n(7,"th",15),r(8,"Latitude"),i(),n(9,"th",15),r(10,"Longitude"),i(),n(11,"th",15),r(12,"Actions"),i()()(),n(13,"tbody",16),f(14,pe,12,4,"tr",17),i()()),o&2){let e=p();l(14),d("ngForOf",e.fields)}}var Ae=(()=>{class o{lookupService;dashboardService;router;googleMapsApiService;mapElement;fields=[];map;markers=[];dashboardFields=[];maintenanceTypes=[];fieldOptions=[];currentFilter={};isDataLoaded=!1;currentZoom=7;constructor(e,a,t,s){this.lookupService=e,this.dashboardService=a,this.router=t,this.googleMapsApiService=s}ngOnInit(){this.loadInitialData()}loadInitialData(){k({fields:this.lookupService.getFields(),maintenanceTypes:this.lookupService.getMaintenanceTypes()}).subscribe({next:e=>{console.log("Loaded maintenance types:",e.maintenanceTypes),this.fields=e.fields,this.fieldOptions=this.fields.map(a=>({value:a.zFieldId,label:a.name})),this.maintenanceTypes=e.maintenanceTypes.map(a=>({id:a.zMaintenanceTypeId,name:a.name})),console.log("Mapped maintenance types:",this.maintenanceTypes),this.isDataLoaded=!0,this.loadDashboardData()},error:e=>{console.error("Error loading initial data:",e)}})}ngAfterViewInit(){this.googleMapsApiService.loadApi().then(()=>{this.initializeMap()}).catch(e=>{console.error("Error loading Google Maps API:",e)})}loadDashboardData(e={}){this.currentFilter=e,this.dashboardService.getDashboardData(e).subscribe({next:a=>{this.dashboardFields=a.fieldData,this.map&&this.addMarkers()},error:a=>{console.error("Error fetching dashboard data:",a)}})}onFiltersChanged(e){this.loadDashboardData(e)}initializeMap(){if(!this.mapElement){setTimeout(()=>this.initializeMap(),100);return}if(!window.google||!window.google.maps){console.warn("Google Maps API not loaded yet, retrying..."),setTimeout(()=>this.initializeMap(),300);return}let e={lat:23.615,lng:58.5912};this.map=new google.maps.Map(this.mapElement.nativeElement,{center:e,zoom:this.currentZoom,mapTypeId:"terrain",styles:this.getMapStyles(),zoomControl:!0,zoomControlOptions:{position:google.maps.ControlPosition.RIGHT_BOTTOM},fullscreenControl:!0,streetViewControl:!1,mapTypeControl:!0,mapTypeControlOptions:{style:google.maps.MapTypeControlStyle.DROPDOWN_MENU,position:google.maps.ControlPosition.TOP_RIGHT}}),this.map.addListener("zoom_changed",()=>{this.currentZoom=this.map.getZoom()}),(this.fields.length>0||this.dashboardFields.length>0)&&this.addMarkers()}addMarkers(){this.markers.forEach(t=>t.setMap(null)),this.markers=[];let e=new google.maps.LatLngBounds;(this.dashboardFields.length>0?this.dashboardFields.map(t=>({zFieldId:t.fieldId,name:t.fieldName,latitude:t.latitude,longitude:t.longitude,productionRate:t.productionRate,extractionYear:t.extractionYear,maintenanceType:t.maintenanceType,maintenanceCost:t.maintenanceCost})):this.fields).forEach(t=>{if(t.latitude&&t.longitude){let s={lat:t.latitude,lng:t.longitude},m=new google.maps.Marker({position:s,map:this.map,title:t.name,animation:google.maps.Animation.DROP,icon:{path:google.maps.SymbolPath.CIRCLE,scale:8,fillColor:"#4CAF50",fillOpacity:.8,strokeWeight:2,strokeColor:"#FFFFFF"}}),x=`
          <div class="p-2">
            <h3 class="font-bold text-lg">${t.name}</h3>
            <p>Field ID: ${t.zFieldId}</p>
            <p>Coordinates: ${t.latitude.toFixed(6)}, ${t.longitude.toFixed(6)}</p>`;t.productionRate!==void 0&&(x+=`
            <p>Production Rate: ${t.productionRate} m\xB3/day</p>
            <p>Extraction Year: ${t.extractionYear}</p>
            <p>Maintenance Type: ${t.maintenanceType}</p>
            <p>Maintenance Cost: $${t.maintenanceCost?.toFixed(2)}</p>
            <div class="mt-2 text-center">
              <button class="view-details-btn bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded"
                      data-field-id="${t.zFieldId}">
                View Details
              </button>
            </div>`),x+="</div>";let w=new google.maps.InfoWindow({content:x});m.addListener("click",()=>{w.open(this.map,m),google.maps.event.addListener(w,"domready",()=>{let T=document.querySelector(".view-details-btn");T&&T.addEventListener("click",ie=>{let ne=ie.target.getAttribute("data-field-id");this.navigateToFieldDetails(Number(ne))})})}),this.markers.push(m),e.extend(s)}}),this.markers.length>0&&this.map.fitBounds(e)}navigateToFieldDetails(e){this.router.navigate(["/field",e])}getMapStyles(){return[{featureType:"water",elementType:"geometry",stylers:[{color:"#e9e9e9"},{lightness:17}]},{featureType:"landscape",elementType:"geometry",stylers:[{color:"#f5f5f5"},{lightness:20}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#f5f5f5"},{lightness:21}]},{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#333333"}]}]}zoomIn(){this.map&&(this.currentZoom=Math.min(this.currentZoom+1,20),this.map.setZoom(this.currentZoom))}zoomOut(){this.map&&(this.currentZoom=Math.max(this.currentZoom-1,1),this.map.setZoom(this.currentZoom))}resetZoom(){if(this.map&&(this.currentZoom=7,this.map.setZoom(this.currentZoom),this.markers.length>0)){let e=new google.maps.LatLngBounds;this.markers.forEach(a=>{e.extend(a.getPosition())}),this.map.fitBounds(e)}}static \u0275fac=function(a){return new(a||o)(h(J),h(q),h(z),h(te))};static \u0275cmp=C({type:o,selectors:[["app-map"]],viewQuery:function(a,t){if(a&1&&D(le,5),a&2){let s;A(s=Y())&&(t.mapElement=s.first)}},decls:16,vars:3,consts:[["mapContainer",""],[1,"p-4","bg-gray-50","dark:bg-gray-800","min-h-screen"],[1,"mb-4"],[1,"text-3xl","font-bold","text-gray-900","dark:text-white"],[1,"mt-2","text-gray-600","dark:text-gray-300"],[3,"maintenanceTypes","fields","filtersChanged",4,"ngIf"],[1,"bg-white","dark:bg-gray-700","rounded-lg","shadow","overflow-hidden","relative"],[1,"w-full","h-[75vh]","z-0"],[1,"mt-6","bg-white","dark:bg-gray-700","p-4","rounded-lg","shadow"],[1,"text-xl","font-semibold","text-gray-800","dark:text-white","mb-4"],[1,"overflow-x-auto"],["class","min-w-full divide-y divide-gray-200 dark:divide-gray-600",4,"ngIf"],[3,"filtersChanged","maintenanceTypes","fields"],[1,"min-w-full","divide-y","divide-gray-200","dark:divide-gray-600"],[1,"bg-gray-50","dark:bg-gray-800"],["scope","col",1,"px-6","py-3","text-left","text-xs","font-medium","text-gray-500","dark:text-gray-300","uppercase","tracking-wider"],[1,"bg-white","dark:bg-gray-700","divide-y","divide-gray-200","dark:divide-gray-600"],["class","hover:bg-gray-100 dark:hover:bg-gray-600",4,"ngFor","ngForOf"],[1,"hover:bg-gray-100","dark:hover:bg-gray-600"],[1,"px-6","py-4","whitespace-nowrap","text-sm","text-gray-500","dark:text-gray-300"],[1,"px-6","py-4","whitespace-nowrap","text-sm","font-medium","text-gray-900","dark:text-white"],[1,"bg-blue-500","hover:bg-blue-700","text-white","font-bold","py-1","px-2","rounded",3,"click"]],template:function(a,t){a&1&&(n(0,"div",1)(1,"div",2)(2,"h1",3),r(3,"Gas Condensate Field Locations"),i(),n(4,"p",4),r(5,"Interactive map showing all gas condensate field locations."),i()(),f(6,se,1,2,"app-map-filter",5),n(7,"div",6),u(8,"div",7,0),i(),n(10,"div",8)(11,"h2",9),r(12,"Field Information"),i(),n(13,"div",10),f(14,me,15,1,"table",11)(15,ce,15,1,"table",11),i()()()),a&2&&(l(6),d("ngIf",t.isDataLoaded),l(8),d("ngIf",t.dashboardFields.length>0),l(),d("ngIf",t.dashboardFields.length===0))},dependencies:[M,L,F,ee],styles:[`[_nghost-%COMP%]{display:block;width:100%}.gm-style-iw[_ngcontent-%COMP%]{font-family:Arial,sans-serif}.dark-theme[_nghost-%COMP%]   .gm-style[_ngcontent-%COMP%], .dark-theme   [_nghost-%COMP%]   .gm-style[_ngcontent-%COMP%]{filter:brightness(.9) contrast(1.1)}
/*# sourceMappingURL=map.component-YZHN4EGY.css.map */`]})}return o})();export{Ae as MapComponent};
//# sourceMappingURL=chunk-M4PQSWHF.mjs.map
