{
  "version": 3,
  "sources": ["src/app/components/admin/login/login.component.ts", "src/app/components/admin/login/login.component.html"],
  "sourcesContent": ["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { UserLogin } from '../../../core/models/user.model';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, TranslateModule],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  isLoading = false;\n  errorMessage = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      passwordHash: ['', [Validators.required,\n        //  Validators.minLength(6)\n        ]],\n      rememberMe: [false]\n    });\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n\n      const loginData: UserLogin = this.loginForm.value;\n\n      this.authService.login(loginData).subscribe({\n        next: (response) => {\n          this.isLoading = false;\n          if (response.success) {\n            // Navigate to dashboard or home page after successful login\n            this.router.navigate(['/grave/management']);\n          } else {\n            this.errorMessage = response.message || 'Login failed';\n          }\n        },\n        error: (error) => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.message || 'An error occurred during login';\n        }\n      });\n    } else {\n      this.loginForm.markAllAsTouched();\n    }\n  }\n}\n", "<div\n  class=\"min-h-screen flex items-center justify-center  py-12 px-4 sm:px-6 lg:px-8\"\n>\n  <div class=\"max-w-5xl w-full flex rounded-xl shadow-lg overflow-hidden\">\n    <!-- Login Form Section -->\n    <div class=\"w-full md:w-1/2 bg-white dark:bg-gray-800 p-8 sm:p-12\">\n      <div class=\"flex justify-center mb-6\">\n        <img\n          class=\"h-16 w-auto dark:hidden\"\n          src=\"assets/logo/Logo.svg\"\n          alt=\"GraveNew Logo\"\n        />\n        <img\n          class=\"h-16 w-auto hidden dark:block\"\n          src=\"assets/logo/Logo-white.svg\"\n          alt=\"GraveNew Logo\"\n        />\n      </div>\n\n      <h2\n        class=\"mt-2 text-center text-3xl font-extrabold text-gray-900 dark:text-gray-100\"\n        translate=\"LOGIN.TITLE\"\n      ></h2>\n\n      <form\n        [formGroup]=\"loginForm\"\n        (ngSubmit)=\"onSubmit()\"\n        class=\"mt-8 space-y-6\"\n      >\n        <div class=\"rounded-md space-y-4\">\n          <div>\n            <label\n              for=\"username\"\n              class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n              translate=\"LOGIN.USERNAME\"\n            >\n            </label>\n            <div class=\"mt-1\">\n              <input\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                formControlName=\"username\"\n                class=\"appearance-none block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-arabic-green focus:border-arabic-green dark:bg-gray-700 dark:text-gray-200 sm:text-sm\"\n                [ngClass]=\"{\n                  'border-red-500':\n                    loginForm.get('username')?.invalid &&\n                    loginForm.get('username')?.touched\n                }\"\n                [placeholder]=\"'LOGIN.USERNAME_PLACEHOLDER' | translate\"\n              />\n              <div\n                *ngIf=\"\n                  loginForm.get('username')?.invalid &&\n                  loginForm.get('username')?.touched\n                \"\n                class=\"mt-1 text-xs text-red-500\"\n              >\n                <span\n                  *ngIf=\"loginForm.get('username')?.errors?.['required']\"\n                  translate=\"LOGIN.USERNAME_REQUIRED\"\n                >\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <div class=\"flex items-center justify-between\">\n              <label\n                for=\"passwordHash\"\n                class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                translate=\"LOGIN.PASSWORD\"\n              >\n              </label>\n              <!-- <a\n                href=\"#\"\n                class=\"text-sm font-medium text-arabic-green hover:text-arabic-green-dark dark:text-arabic-green-light dark:hover:text-arabic-green\"\n                translate=\"LOGIN.FORGOT_PASSWORD\"\n              >\n              </a> -->\n            </div>\n            <div class=\"mt-1\">\n              <input\n                id=\"passwordHash\"\n                name=\"passwordHash\"\n                type=\"password\"\n                formControlName=\"passwordHash\"\n                class=\"appearance-none block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-arabic-green focus:border-arabic-green dark:bg-gray-700 dark:text-gray-200 sm:text-sm\"\n                [ngClass]=\"{\n                  'border-red-500':\n                    loginForm.get('passwordHash')?.invalid &&\n                    loginForm.get('passwordHash')?.touched\n                }\"\n                [placeholder]=\"'LOGIN.PASSWORD_PLACEHOLDER' | translate\"\n              />\n              <div\n                *ngIf=\"\n                  loginForm.get('passwordHash')?.invalid &&\n                  loginForm.get('passwordHash')?.touched\n                \"\n                class=\"mt-1 text-xs text-red-500\"\n              >\n                <span\n                  *ngIf=\"loginForm.get('passwordHash')?.errors?.['required']\"\n                  translate=\"LOGIN.PASSWORD_REQUIRED\"\n                >\n                </span>\n                <span\n                  *ngIf=\"loginForm.get('passwordHash')?.errors?.['minlength']\"\n                  translate=\"LOGIN.PASSWORD_LENGTH\"\n                >\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <!-- <div class=\"flex items-center\">\n            <input\n              id=\"remember-me\"\n              name=\"remember-me\"\n              type=\"checkbox\"\n              formControlName=\"rememberMe\"\n              class=\"h-4 w-4 text-arabic-green focus:ring-arabic-green border-gray-300 dark:border-gray-600 rounded\"\n            />\n            <label\n              for=\"remember-me\"\n              class=\"ml-2 block text-sm text-gray-900 dark:text-gray-300\"\n              translate=\"LOGIN.REMEMBER_ME\"\n            >\n            </label>\n          </div> -->\n        </div>\n\n        <div>\n          <button\n            type=\"submit\"\n            [disabled]=\"isLoading || loginForm.invalid\"\n            class=\"group relative w-full cursor-pointer flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-arabic-green hover:bg-arabic-green-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-arabic-green disabled:opacity-70\"\n          >\n            <span class=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n              <svg\n                *ngIf=\"!isLoading\"\n                class=\"h-5 w-5 text-arabic-green-light group-hover:text-arabic-white\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                aria-hidden=\"true\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n              <svg\n                *ngIf=\"isLoading\"\n                class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-arabic-white\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n              >\n                <circle\n                  class=\"opacity-25\"\n                  cx=\"12\"\n                  cy=\"12\"\n                  r=\"10\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"4\"\n                ></circle>\n                <path\n                  class=\"opacity-75\"\n                  fill=\"currentColor\"\n                  d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                ></path>\n              </svg>\n            </span>\n            <span translate=\"LOGIN.BUTTON\"></span>\n          </button>\n        </div>\n\n        <!-- Error Message Display -->\n        <div *ngIf=\"errorMessage\" class=\"mt-3 text-center\">\n          <p class=\"text-sm text-red-600\">{{ errorMessage }}</p>\n        </div>\n      </form>\n    </div>\n\n    <!-- Image Section -->\n    <div class=\"hidden md:block md:w-1/2 bg-indigo-50 dark:bg-gray-700\">\n      <div class=\"h-full flex items-center justify-center p-8\">\n        <img\n          class=\"max-w-full max-h-full object-cover dark:hidden\"\n          src=\"assets/logo/Logo.svg\"\n          alt=\"Workspace\"\n        />\n        <img\n          class=\"max-w-full max-h-full object-cover hidden dark:block\"\n          src=\"assets/logo/Logo-white.svg\"\n          alt=\"Workspace\"\n        />\n      </div>\n    </div>\n  </div>\n</div>\n"],
  "mappings": "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",
  "names": ["\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275template", "LoginComponent_div_14_span_1_Template", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "tmp_1_0", "ctx_r0", "loginForm", "get", "errors", "LoginComponent_div_21_span_1_Template", "LoginComponent_div_21_span_2_Template", "tmp_2_0", "\u0275\u0275text", "\u0275\u0275textInterpolate", "errorMessage", "LoginComponent", "fb", "router", "authService", "isLoading", "constructor", "group", "username", "Validators", "required", "passwordHash", "rememberMe", "onSubmit", "valid", "loginData", "value", "login", "subscribe", "next", "response", "success", "navigate", "message", "error", "markAllAsTouched", "\u0275\u0275directiveInject", "FormBuilder", "Router", "AuthService", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275listener", "LoginComponent_div_14_Template", "LoginComponent_div_21_Template", "LoginComponent__svg_svg_25_Template", "LoginComponent__svg_svg_26_Template", "LoginComponent_div_28_Template", "\u0275\u0275pureFunction1", "_c0", "invalid", "touched", "\u0275\u0275pipeBind1", "tmp_3_0", "tmp_4_0", "tmp_6_0", "CommonModule", "NgClass", "NgIf", "ReactiveFormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "FormGroupDirective", "FormControlName", "TranslateModule", "TranslatePipe", "TranslateDirective", "styles"]
}
