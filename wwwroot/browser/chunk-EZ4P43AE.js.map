{
  "version": 3,
  "sources": ["src/app/components/maintenance-records/maintenance-records.component.ts", "src/app/components/maintenance-records/maintenance-records.component.html"],
  "sourcesContent": ["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  ReactiveFormsModule,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { GasService } from '../../shared/services/gas.service';\nimport { ZskService } from '../../shared/services/zsk.service';\nimport {\n  FieldMaintenance,\n  AddFieldMaintenanceDto,\n  UpdateFieldMaintenanceDto,\n  FieldMaintenanceFilter,\n} from '../../models/field-maintenance.model';\nimport { GasField } from '../../models/gas-field.model';\nimport { MaintenanceType } from '../../models/maintenance-type.model';\nimport { forkJoin, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { TextInputComponent } from '../../shared/components/text-input/text-input.component';\nimport { TextAreaComponent } from '../../shared/components/text-area/text-area.component';\nimport { DatePickerComponent } from '../../shared/components/date-picker/date-picker.component';\nimport { LabelComponent } from '../../shared/components/label/label.component';\nimport { ZskSelectComponent } from '../../shared/components/zsk/zsk-select.component';\nimport { Pagination } from '../../models/pagination.model';\nimport { ToastService } from '../../shared/services/toast.service';\nimport { ConfirmDialogComponent } from '../../shared/components/confirm-dialog/confirm-dialog.component';\nimport { HasRoleDirective } from '../../shared/directives/hasRole.directive';\nimport { Roles } from '../../core/enum/roles.enum';\n\n@Component({\n  selector: 'app-maintenance-records',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TextInputComponent,\n    TextAreaComponent,\n    DatePickerComponent,\n    LabelComponent,\n    ZskSelectComponent,\n    ConfirmDialogComponent,\n    HasRoleDirective,\n  ],\n  templateUrl: './maintenance-records.component.html',\n  styleUrls: ['./maintenance-records.component.scss'],\n})\nexport class MaintenanceRecordsComponent implements OnInit, OnDestroy {\n  Math = Math;\n  roleEnum = Roles;\n  maintenanceRecords: FieldMaintenance[] = [];\n  pagination: Pagination = {\n    currentPage: 1,\n    itemsPerPage: 10,\n    totalItems: 0,\n    totalPages: 0,\n  };\n  fields: GasField[] = [];\n  maintenanceTypes: MaintenanceType[] = [];\n  recordForm!: FormGroup;\n  filterForm!: FormGroup;\n  isEditMode = false;\n  selectedRecord: FieldMaintenance | null = null;\n  isLoading = false;\n  isFormVisible = false;\n  isSubmitting = false;\n\n\n  // Sort\n  sortColumn = 'fieldMaintenanceDate';\n  sortDirection = 'desc';\n\n  private subscriptions: Subscription[] = [];\n\n  // Add property to store cached options\n  private maintenanceTypeOptions: {value: number, label: string}[] = [];\n  private fieldOptions: {value: number, label: string}[] = [];\n\n  // Delete confirmation properties\n  showDeleteConfirmation = false;\n  recordToDelete: FieldMaintenance | null = null;\n\n  constructor(\n    private gasService: GasService,\n    private zskService: ZskService,\n    private fb: FormBuilder,\n    private toastService: ToastService\n  ) {}\n\n  ngOnInit(): void {\n    this.initForms();\n\n    // First load basic options\n    this.loadFilterOptions();\n\n    // Load records with a small delay to give the browser time to render the UI\n    setTimeout(() => {\n      this.loadRecords();\n    }, 100);\n  }\n\n  initForms(): void {\n    this.recordForm = this.fb.group({\n      fieldMaintenanceGuid: [''],\n      fieldMaintenanceDate: ['', Validators.required],\n      cost: [0, [Validators.required, Validators.min(0)]],\n      description: ['', Validators.required],\n      zMaintenanceTypeId: [null, Validators.required],\n      zFieldId: [null, Validators.required],\n    });\n\n    this.filterForm = this.fb.group({\n      search: [''],\n      startDate: [''],\n      endDate: [''],\n      zMaintenanceTypeId: [null],\n      zFieldId: [null],\n      minCost: [null],\n      maxCost: [null],\n    });\n\n    const filterSubscription = this.filterForm.valueChanges\n      .pipe(debounceTime(500))\n      .subscribe(() => {\n        this.pagination.currentPage = 1;\n        this.loadRecords();\n      });\n\n    this.subscriptions.push(filterSubscription);\n  }\n\n  loadFilterOptions(): void {\n    forkJoin({\n      fields: this.zskService.getFields(),\n      maintenanceTypes: this.zskService.getMaintenanceTypes(),\n    }).subscribe({\n      next: (result) => {\n        this.fields = result.fields;\n        this.maintenanceTypes = result.maintenanceTypes;\n\n        // Cache the options immediately\n        this.maintenanceTypeOptions = this.maintenanceTypes.map((type) => ({\n          value: type.zMaintenanceTypeId,\n          label: type.name,\n        }));\n\n        this.fieldOptions = this.fields.map((field) => ({\n          value: field.zFieldId,\n          label: field.name,\n        }));\n      },\n      error: (error) => {\n        console.error('Error fetching filter options:', error);\n        this.toastService.error('Failed to load filter options. Please try again later.');\n      },\n    });\n  }\n\n  loadRecords(): void {\n    this.isLoading = true;\n    const filters: FieldMaintenanceFilter = this.filterForm.value;\n\n    this.gasService\n      .getFieldMaintenancesWithFilter(\n        filters,\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage\n      )\n      .subscribe({\n        next: (response) => {\n          this.pagination = response.pagination;\n          this.maintenanceRecords = response.result.data || [];\n          this.isLoading = false;\n        },\n        error: (error) => {\n          console.error('Error fetching maintenance records:', error);\n          this.isLoading = false;\n          this.toastService.error('Failed to load maintenance records. Please try again later.');\n        },\n      });\n  }\n\n  onPageChange(page: number): void {\n    this.pagination.currentPage = page;\n    this.loadRecords();\n  }\n\n  onSort(column: string): void {\n    if (this.sortColumn === column) {\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortColumn = column;\n      this.sortDirection = 'asc';\n    }\n    this.loadRecords();\n  }\n\n  toggleForm(isNew: boolean | null = false): void {\n    this.isFormVisible = !this.isFormVisible;\n\n    if (this.isFormVisible && !this.isEditMode) {\n      this.resetForm();\n    } else if (!this.isFormVisible) {\n      this.resetForm();\n    }\n  }\n\n  resetForm(): void {\n    this.recordForm.reset({\n      fieldMaintenanceGuid: '',\n      cost: 0,\n      description: '',\n      zMaintenanceTypeId: null,\n      zFieldId: null,\n    });\n\n    this.isEditMode = false;\n    this.selectedRecord = null;\n  }\n\n  onSubmit(): void {\n    if (this.recordForm.invalid) {\n      this.markFormGroupTouched(this.recordForm);\n      this.toastService.warning('Please fill in all required fields correctly.');\n      return;\n    }\n\n    this.isSubmitting = true;\n    const recordData = this.recordForm.value;\n\n    if (this.isEditMode && this.selectedRecord) {\n      const updateData: UpdateFieldMaintenanceDto = {\n        fieldMaintenanceGuid: recordData.fieldMaintenanceGuid,\n        fieldMaintenanceDate: recordData.fieldMaintenanceDate,\n        cost: recordData.cost,\n        description: recordData.description,\n        zMaintenanceTypeId: recordData.zMaintenanceTypeId,\n        zFieldId: recordData.zFieldId,\n      };\n\n      this.gasService.updateFieldMaintenance(updateData).subscribe({\n        next: () => {\n          this.onSubmitSuccess('Maintenance record updated successfully!');\n        },\n        error: (error) => {\n          console.error('Error updating maintenance record:', error);\n          this.isSubmitting = false;\n          this.toastService.error('Failed to update maintenance record. Please try again.');\n        },\n      });\n    } else {\n      const newData: AddFieldMaintenanceDto = {\n        fieldMaintenanceDate: recordData.fieldMaintenanceDate,\n        cost: recordData.cost,\n        description: recordData.description,\n        zMaintenanceTypeId: recordData.zMaintenanceTypeId,\n        zFieldId: recordData.zFieldId,\n      };\n\n      this.gasService.addFieldMaintenance(newData).subscribe({\n        next: () => {\n          this.onSubmitSuccess('Maintenance record added successfully!');\n        },\n        error: (error) => {\n          console.error('Error adding maintenance record:', error);\n          this.isSubmitting = false;\n          this.toastService.error('Failed to add maintenance record. Please try again.');\n        },\n      });\n    }\n  }\n\n  onSubmitSuccess(message: string): void {\n    this.loadRecords();\n    this.resetForm();\n    this.isFormVisible = false;\n    this.isSubmitting = false;\n    this.toastService.success(message);\n  }\n\n  editRecord(record: FieldMaintenance): void {\n    this.isEditMode = true;\n    this.selectedRecord = record;\n\n    // Set form visible without toggling if not already visible\n    if (!this.isFormVisible) {\n      this.isFormVisible = true;\n    }\n\n    this.recordForm.patchValue({\n      fieldMaintenanceGuid: record.fieldMaintenanceGuid,\n      fieldMaintenanceDate: this.formatDateForInput(\n        record.fieldMaintenanceDate\n      ),\n      cost: record.cost,\n      description: record.description,\n      zMaintenanceTypeId: record.zMaintenanceTypeId,\n      zFieldId: record.zFieldId,\n    });\n  }\n\n  showDeleteConfirmationDialog(record: FieldMaintenance): void {\n    this.recordToDelete = record;\n    this.showDeleteConfirmation = true;\n  }\n\n  onConfirmDelete(): void {\n    if (this.recordToDelete) {\n      this.performDeleteRecord(this.recordToDelete);\n    }\n    this.showDeleteConfirmation = false;\n    this.recordToDelete = null;\n  }\n\n  onCancelDelete(): void {\n    this.showDeleteConfirmation = false;\n    this.recordToDelete = null;\n  }\n\n  deleteRecord(record: FieldMaintenance): void {\n    this.showDeleteConfirmationDialog(record);\n  }\n\n  performDeleteRecord(record: FieldMaintenance): void {\n    this.gasService\n      .deleteFieldMaintenance(record.fieldMaintenanceGuid)\n      .subscribe({\n        next: () => {\n          this.loadRecords();\n          this.toastService.success(`Maintenance record for ${record.fieldName} has been deleted.`);\n        },\n        error: (error) => {\n          console.error('Error deleting maintenance record:', error);\n          this.toastService.error('Failed to delete maintenance record. Please try again.');\n        },\n      });\n  }\n\n  formatDateForInput(dateString: string): string {\n    const date = new Date(dateString);\n    return date.toISOString().split('T')[0];\n  }\n\n  getFieldName(fieldId: number): string {\n    const field = this.fields.find((f) => f.zFieldId === fieldId);\n    return field ? field.name : 'Unknown';\n  }\n\n  getMaintenanceTypeName(typeId: number): string {\n    const type = this.maintenanceTypes.find(\n      (t) => t.zMaintenanceTypeId === typeId\n    );\n    return type ? type.name : 'Unknown';\n  }\n\n  // Helper method to mark all controls in a form group as touched\n  markFormGroupTouched(formGroup: FormGroup): void {\n    Object.values(formGroup.controls).forEach((control) => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n  // Helper methods for select options\n  getMaintenanceTypeOptions() {\n    return this.maintenanceTypeOptions;\n  }\n\n  getFieldOptions() {\n    return this.fieldOptions;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n", "<div class=\"p-4 bg-gray-50 dark:bg-gray-800 min-h-screen\">\n  <div class=\"mb-6 flex justify-between items-center\">\n    <div>\n      <h1 class=\"text-3xl font-bold text-gray-900 dark:text-white\">Maintenance Records</h1>\n      <p class=\"mt-1 text-gray-600 dark:text-gray-300\">Manage gas field maintenance records</p>\n    </div>\n    <div>\n      <button\n        (click)=\"toggleForm()\"\n        class=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n      >\n        {{ isFormVisible ? 'Cancel' : 'Add New Maintenance' }}\n      </button>\n    </div>\n  </div>\n\n  <!-- Form Section -->\n  <div *ngIf=\"isFormVisible\" class=\"bg-white dark:bg-gray-700 p-6 rounded-lg shadow mb-6\">\n    <h2 class=\"text-xl font-semibold text-gray-800 dark:text-white mb-4\">\n      {{ isEditMode ? 'Edit Maintenance Record' : 'Add Maintenance Record' }}\n    </h2>\n\n    <form [formGroup]=\"recordForm\" (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n      <input type=\"hidden\" formControlName=\"fieldMaintenanceGuid\">\n\n      <div>\n        <app-label [label]=\"'Maintenance Date'\" [required]=\"true\"></app-label>\n        <app-date-picker\n          [placeholder]=\"'Select date'\"\n          [required]=\"true\"\n          [errorMessage]=\"'Date is required'\"\n          formControlName=\"fieldMaintenanceDate\"\n        ></app-date-picker>\n      </div>\n\n      <div>\n        <app-zsk-select\n          [label]=\"'Maintenance Type'\"\n          [required]=\"true\"\n          [placeholder]=\"'Select maintenance type'\"\n          [options]=\"getMaintenanceTypeOptions()\"\n          formControlName=\"zMaintenanceTypeId\"\n          [id]=\"'maintenance-type'\"\n          [name]=\"'maintenance-type'\"\n        ></app-zsk-select>\n      </div>\n\n      <div>\n        <app-zsk-select\n          [label]=\"'Field'\"\n          [required]=\"true\"\n          [placeholder]=\"'Select field'\"\n          [options]=\"getFieldOptions()\"\n          formControlName=\"zFieldId\"\n          [id]=\"'field'\"\n          [name]=\"'field'\"\n        ></app-zsk-select>\n      </div>\n\n      <div>\n        <app-text-input\n          [label]=\"'Cost'\"\n          [required]=\"true\"\n          [type]=\"'number'\"\n          [placeholder]=\"'Enter cost'\"\n          formControlName=\"cost\"\n          [id]=\"'cost'\"\n          [name]=\"'cost'\"\n          [errorMessage]=\"'Cost is required'\"\n        ></app-text-input>\n      </div>\n\n      <div class=\"md:col-span-2\">\n        <app-text-area\n          [label]=\"'Description'\"\n          [required]=\"true\"\n          [placeholder]=\"'Enter description'\"\n          formControlName=\"description\"\n          [id]=\"'description'\"\n          [name]=\"'description'\"\n          [rows]=\"4\"\n          [errorMessage]=\"'Description is required'\"\n        ></app-text-area>\n      </div>\n\n      <div class=\"md:col-span-2 flex justify-end\">\n        <button\n          type=\"button\"\n          (click)=\"toggleForm()\"\n          class=\"mr-2 px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-600\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          [disabled]=\"recordForm.invalid || isSubmitting\"\n          class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\n        >\n          {{ isSubmitting ? 'Saving...' : (isEditMode ? 'Update' : 'Save') }}\n        </button>\n      </div>\n    </form>\n  </div>\n\n  <!-- Filter Section -->\n  <div class=\"bg-white dark:bg-gray-700 p-4 rounded-lg shadow mb-6\">\n    <h2 class=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Filter Records</h2>\n\n    <form [formGroup]=\"filterForm\" class=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-7 gap-4\">\n      <div>\n        <app-text-input\n          [label]=\"'Search'\"\n          [placeholder]=\"'Search...'\"\n          formControlName=\"search\"\n        ></app-text-input>\n      </div>\n\n      <div>\n        <app-zsk-select\n          [label]=\"'Field'\"\n          [placeholder]=\"'All fields'\"\n          [options]=\"getFieldOptions()\"\n          formControlName=\"zFieldId\"\n        ></app-zsk-select>\n      </div>\n\n      <div>\n        <app-zsk-select\n          [label]=\"'Maintenance Type'\"\n          [placeholder]=\"'All types'\"\n          [options]=\"getMaintenanceTypeOptions()\"\n          formControlName=\"zMaintenanceTypeId\"\n        ></app-zsk-select>\n      </div>\n\n      <div>\n        <app-label [label]=\"'Start Date'\" [required]=\"true\"></app-label>\n        <app-date-picker\n          [placeholder]=\"'Select start date'\"\n          formControlName=\"startDate\"\n        ></app-date-picker>\n      </div>\n\n      <div>\n        <app-label [label]=\"'End Date'\" [required]=\"true\"></app-label>\n        <app-date-picker\n          [placeholder]=\"'Select end date'\"\n          formControlName=\"endDate\"\n        ></app-date-picker>\n      </div>\n\n      <div>\n        <app-text-input\n          [label]=\"'Min Cost'\"\n          [type]=\"'number'\"\n          [placeholder]=\"'Min'\"\n          formControlName=\"minCost\"\n        ></app-text-input>\n      </div>\n\n      <div>\n        <app-text-input\n          [label]=\"'Max Cost'\"\n          [type]=\"'number'\"\n          [placeholder]=\"'Max'\"\n          formControlName=\"maxCost\"\n        ></app-text-input>\n      </div>\n    </form>\n  </div>\n\n  <!-- Records Table -->\n  <div class=\"bg-white dark:bg-gray-700 rounded-lg shadow overflow-hidden\">\n    <div class=\"overflow-x-auto\">\n      <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\">\n        <thead class=\"bg-gray-50 dark:bg-gray-800\">\n          <tr>\n            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" (click)=\"onSort('fieldMaintenanceDate')\">\n              Date\n              <span *ngIf=\"sortColumn === 'fieldMaintenanceDate'\" class=\"ml-1\">\n                {{ sortDirection === 'asc' ? '↑' : '↓' }}\n              </span>\n            </th>\n            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" (click)=\"onSort('fieldName')\">\n              Field\n              <span *ngIf=\"sortColumn === 'fieldName'\" class=\"ml-1\">\n                {{ sortDirection === 'asc' ? '↑' : '↓' }}\n              </span>\n            </th>\n            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" (click)=\"onSort('maintenanceTypeName')\">\n              Type\n              <span *ngIf=\"sortColumn === 'maintenanceTypeName'\" class=\"ml-1\">\n                {{ sortDirection === 'asc' ? '↑' : '↓' }}\n              </span>\n            </th>\n            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" (click)=\"onSort('cost')\">\n              Cost\n              <span *ngIf=\"sortColumn === 'cost'\" class=\"ml-1\">\n                {{ sortDirection === 'asc' ? '↑' : '↓' }}\n              </span>\n            </th>\n            <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              Description\n            </th>\n            <th scope=\"col\" class=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              Actions\n            </th>\n          </tr>\n        </thead>\n        <tbody class=\"bg-white dark:bg-gray-700 divide-y divide-gray-200 dark:divide-gray-600\">\n          <tr *ngIf=\"isLoading\" class=\"animate-pulse\">\n            <td colspan=\"6\" class=\"px-6 py-4 whitespace-nowrap text-center text-gray-500 dark:text-gray-300\">\n              Loading...\n            </td>\n          </tr>\n          <tr *ngIf=\"!isLoading && (!maintenanceRecords || maintenanceRecords.length === 0)\" class=\"hover:bg-gray-100 dark:hover:bg-gray-600\">\n            <td colspan=\"6\" class=\"px-6 py-4 whitespace-nowrap text-center text-gray-500 dark:text-gray-300\">\n              No records found\n            </td>\n          </tr>\n          <tr *ngFor=\"let record of maintenanceRecords\" class=\"hover:bg-gray-100 dark:hover:bg-gray-600\">\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\n              {{ record.fieldMaintenanceDate | date:'MMM d, yyyy' }}\n            </td>\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\n              {{ record.fieldName }}\n            </td>\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\n              {{ record.maintenanceTypeName }}\n            </td>\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\n              ${{ record.cost | number:'1.2-2' }}\n            </td>\n            <td class=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-300 max-w-xs truncate\">\n              {{ record.description }}\n            </td>\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-right space-x-1\">\n              <button\n                (click)=\"editRecord(record)\"\n                class=\"px-3 py-1.5 text-xs bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                Edit\n              </button>\n              <button\n                (click)=\"deleteRecord(record)\"\n                *appHasRole=\"[roleEnum.ADMIN]\"\n                class=\"px-3 py-1.5 text-xs bg-red-600 text-white rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Pagination -->\n    <div class=\"px-6 py-3 flex items-center justify-between border-t border-gray-200 dark:border-gray-600\">\n      <div class=\"text-sm text-gray-700 dark:text-gray-300\">\n        Showing <span class=\"font-medium\">{{ (pagination.currentPage - 1) * pagination.itemsPerPage + 1 }}</span> to\n        <span class=\"font-medium\">{{ Math.min(pagination.currentPage * pagination.itemsPerPage, pagination.totalItems) }}</span> of\n        <span class=\"font-medium\">{{ pagination.totalItems }}</span> results\n      </div>\n      <div class=\"flex space-x-2\">\n        <button\n          (click)=\"onPageChange(pagination.currentPage - 1)\"\n          [disabled]=\"pagination.currentPage === 1\"\n          class=\"px-3 py-1 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-600 disabled:opacity-50\"\n        >\n          Previous\n        </button>\n        <button\n          (click)=\"onPageChange(pagination.currentPage + 1)\"\n          [disabled]=\"pagination.currentPage === pagination.totalPages\"\n          class=\"px-3 py-1 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-600 disabled:opacity-50\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Confirmation Dialog -->\n  <app-confirm-dialog\n    [visible]=\"showDeleteConfirmation\"\n    [title]=\"'Confirm Delete'\"\n    [message]=\"recordToDelete ? 'Are you sure you want to delete this maintenance record for ' + recordToDelete.fieldName + '?' : 'Are you sure you want to delete this record?'\"\n    [confirmText]=\"'Delete'\"\n    [cancelText]=\"'Cancel'\"\n    (confirm)=\"onConfirmDelete()\"\n    (cancel)=\"onCancelDelete()\"\n  ></app-confirm-dialog>\n</div>\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onSubmit", "\u0275\u0275element", "toggleForm", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "isEditMode", "\u0275\u0275property", "recordForm", "getMaintenanceTypeOptions", "getFieldOptions", "invalid", "isSubmitting", "sortDirection", "_r5", "record_r4", "$implicit", "deleteRecord", "_r3", "editRecord", "\u0275\u0275template", "MaintenanceRecordsComponent_tr_55_button_16_Template", "\u0275\u0275pipeBind2", "fieldMaintenanceDate", "fieldName", "maintenanceTypeName", "cost", "description", "\u0275\u0275pureFunction1", "_c0", "roleEnum", "ADMIN", "MaintenanceRecordsComponent", "gasService", "zskService", "fb", "toastService", "Math", "Roles", "maintenanceRecords", "pagination", "currentPage", "itemsPerPage", "totalItems", "totalPages", "fields", "maintenanceTypes", "filterForm", "selectedRecord", "isLoading", "isFormVisible", "sortColumn", "subscriptions", "maintenanceTypeOptions", "fieldOptions", "showDeleteConfirmation", "recordToDelete", "constructor", "ngOnInit", "initForms", "loadFilterOptions", "setTimeout", "loadRecords", "group", "fieldMaintenanceGuid", "Validators", "required", "min", "zMaintenanceTypeId", "zFieldId", "search", "startDate", "endDate", "minCost", "maxCost", "filterSubscription", "valueChanges", "pipe", "debounceTime", "subscribe", "push", "forkJoin", "getFields", "getMaintenanceTypes", "next", "result", "map", "type", "value", "label", "name", "field", "error", "console", "filters", "getFieldMaintenancesWithFilter", "response", "data", "onPageChange", "page", "onSort", "column", "isNew", "resetForm", "reset", "markFormGroupTouched", "warning", "recordData", "updateData", "updateFieldMaintenance", "onSubmitSuccess", "newData", "addFieldMaintenance", "message", "success", "record", "patchValue", "formatDateForInput", "showDeleteConfirmationDialog", "onConfirmDelete", "performDeleteRecord", "onCancelDelete", "deleteFieldMaintenance", "dateString", "Date", "toISOString", "split", "getFieldName", "fieldId", "find", "f", "getMaintenanceTypeName", "typeId", "t", "formGroup", "Object", "values", "controls", "forEach", "control", "markAsTouched", "FormGroup", "ngOnDestroy", "sub", "unsubscribe", "\u0275\u0275directiveInject", "GasService", "ZskService", "FormBuilder", "ToastService", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "MaintenanceRecordsComponent_div_10_Template", "MaintenanceRecordsComponent_span_38_Template", "MaintenanceRecordsComponent_span_41_Template", "MaintenanceRecordsComponent_span_44_Template", "MaintenanceRecordsComponent_span_47_Template", "MaintenanceRecordsComponent_tr_53_Template", "MaintenanceRecordsComponent_tr_54_Template", "MaintenanceRecordsComponent_tr_55_Template", "length", "\u0275\u0275textInterpolate", "CommonModule", "NgForOf", "NgIf", "DecimalPipe", "DatePipe", "ReactiveFormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "RequiredValidator", "FormGroupDirective", "FormControlName", "TextInputComponent", "TextAreaComponent", "DatePickerComponent", "LabelComponent", "ZskSelectComponent", "ConfirmDialogComponent", "HasRoleDirective", "styles"]
}
