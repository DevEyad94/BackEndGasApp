{
  "version": 3,
  "sources": ["src/app/components/production-records/production-records.component.ts", "src/app/components/production-records/production-records.component.html"],
  "sourcesContent": ["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  ReactiveFormsModule,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { GasService } from '../../shared/services/gas.service';\nimport { ZskService } from '../../shared/services/zsk.service';\nimport {\n  ProductionRecord,\n  AddProductionRecordDto,\n  UpdateProductionRecordDto,\n  ProductionRecordFilter,\n} from '../../models/production-record.model';\nimport { GasField } from '../../models/gas-field.model';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { TextInputComponent } from '../../shared/components/text-input/text-input.component';\nimport { TextAreaComponent } from '../../shared/components/text-area/text-area.component';\nimport { DatePickerComponent } from '../../shared/components/date-picker/date-picker.component';\nimport { LabelComponent } from '../../shared/components/label/label.component';\nimport { ZskSelectComponent } from '../../shared/components/zsk/zsk-select.component';\nimport { Pagination } from '../../models/pagination.model';\nimport { ToastService } from '../../shared/services/toast.service';\nimport { ConfirmDialogComponent } from '../../shared/components/confirm-dialog/confirm-dialog.component';\nimport { HasRoleDirective } from '../../shared/directives/hasRole.directive';\nimport { Roles } from '../../core/enum/roles.enum';\n@Component({\n  selector: 'app-production-records',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TextInputComponent,\n    TextAreaComponent,\n    DatePickerComponent,\n    LabelComponent,\n    ZskSelectComponent,\n    ConfirmDialogComponent,\n    HasRoleDirective,\n  ],\n  templateUrl: './production-records.component.html',\n  styleUrls: ['./production-records.component.scss'],\n})\nexport class ProductionRecordsComponent implements OnInit, OnDestroy {\n  Math = Math;\n  role = Roles;\n  productionRecords: ProductionRecord[] = [];\n  pagination: Pagination = {\n    currentPage: 1,\n    itemsPerPage: 10,\n    totalItems: 0,\n    totalPages: 0,\n  };\n  fields: GasField[] = [];\n  recordForm!: FormGroup;\n  filterForm!: FormGroup;\n  isEditMode = false;\n  selectedRecord: ProductionRecord | null = null;\n  isLoading = false;\n  isFormVisible = false;\n  isSubmitting = false;\n\n  // Sort\n  sortColumn = 'dateOfProduction';\n  sortDirection = 'desc';\n\n  // File import\n  selectedFile: File | null = null;\n  importMessage = '';\n\n  private subscriptions: Subscription[] = [];\n\n  // Add property to store cached options\n  private fieldOptions: { value: number; label: string }[] = [];\n\n  // Delete confirmation properties\n  showDeleteConfirmation = false;\n  recordToDelete: ProductionRecord | null = null;\n\n  constructor(\n    private gasService: GasService,\n    private zskService: ZskService,\n    private fb: FormBuilder,\n    private toastService: ToastService\n  ) {}\n\n  ngOnInit(): void {\n    this.initForms();\n\n    // Load filter options\n    this.loadFilterOptions();\n\n    // Load records with a small delay to give the browser time to render the UI\n    setTimeout(() => {\n      this.loadRecords();\n    }, 100);\n  }\n\n  initForms(): void {\n    this.recordForm = this.fb.group({\n      productionRecordGuid: [''],\n      dateOfProduction: ['', Validators.required],\n      productionOfCost: [0, [Validators.required, Validators.min(0)]],\n      productionRate: [0, [Validators.required, Validators.min(0)]],\n      zFieldId: [null, Validators.required],\n    });\n\n    this.filterForm = this.fb.group({\n      search: [''],\n      startDate: [''],\n      endDate: [''],\n      zFieldId: [null],\n      minProductionRate: [null],\n      maxProductionRate: [null],\n      year: [null],\n    });\n\n    const filterSubscription = this.filterForm.valueChanges\n      .pipe(debounceTime(500))\n      .subscribe(() => {\n        this.pagination.currentPage = 1;\n        this.loadRecords();\n      });\n\n    this.subscriptions.push(filterSubscription);\n  }\n\n  loadFilterOptions(): void {\n    this.zskService.getFields().subscribe({\n      next: (fields) => {\n        this.fields = fields;\n\n        // Cache the options immediately\n        this.fieldOptions = this.fields.map((field) => ({\n          value: field.zFieldId,\n          label: field.name,\n        }));\n      },\n      error: (error) => {\n        console.error('Error fetching fields:', error);\n        this.toastService.error(\n          'Failed to load fields. Please try again later.'\n        );\n      },\n    });\n  }\n\n  loadRecords(): void {\n    this.isLoading = true;\n    const filters: ProductionRecordFilter = this.filterForm.value;\n\n    this.gasService\n      .getProductionRecordsWithFilter(\n        filters,\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        this.sortColumn,\n        this.sortDirection\n      )\n      .subscribe({\n        next: (response) => {\n          this.productionRecords = response.result.data || [];\n          this.pagination = response.pagination;\n          this.isLoading = false;\n        },\n        error: (error) => {\n          console.error('Error fetching production records:', error);\n          this.isLoading = false;\n          this.toastService.error(\n            'Failed to load production records. Please try again later.'\n          );\n        },\n      });\n  }\n\n  onPageChange(page: number): void {\n    this.pagination.currentPage = page;\n    this.loadRecords();\n  }\n\n  onSort(column: string): void {\n    if (this.sortColumn === column) {\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortColumn = column;\n      this.sortDirection = 'asc';\n    }\n    this.loadRecords();\n  }\n\n  toggleForm(isNew: boolean | null = false): void {\n    this.isFormVisible = !this.isFormVisible;\n\n    if (this.isFormVisible && !this.isEditMode) {\n      this.resetForm();\n    } else if (!this.isFormVisible) {\n      this.resetForm();\n    }\n  }\n\n  resetForm(): void {\n    this.recordForm.reset({\n      productionRecordGuid: '',\n      productionOfCost: 0,\n      productionRate: 0,\n      zFieldId: null,\n    });\n    this.isEditMode = false;\n    this.selectedRecord = null;\n  }\n\n  onSubmit(): void {\n    if (this.recordForm.invalid) {\n      this.markFormGroupTouched(this.recordForm);\n      this.toastService.warning(\n        'Please fill in all required fields correctly.'\n      );\n      return;\n    }\n\n    this.isSubmitting = true;\n    const recordData = this.recordForm.value;\n\n    if (this.isEditMode && this.selectedRecord) {\n      const updateData: UpdateProductionRecordDto = {\n        productionRecordGuid: recordData.productionRecordGuid,\n        dateOfProduction: recordData.dateOfProduction,\n        productionOfCost: recordData.productionOfCost,\n        productionRate: recordData.productionRate,\n        zFieldId: recordData.zFieldId,\n      };\n\n      this.gasService.updateProductionRecord(updateData).subscribe({\n        next: () => {\n          this.onSubmitSuccess('Production record updated successfully!');\n        },\n        error: (error) => {\n          console.error('Error updating record:', error);\n          this.isSubmitting = false;\n          this.toastService.error(\n            'Failed to update production record. Please try again.'\n          );\n        },\n      });\n    } else {\n      const newData: AddProductionRecordDto = {\n        dateOfProduction: recordData.dateOfProduction,\n        productionOfCost: recordData.productionOfCost,\n        productionRate: recordData.productionRate,\n        zFieldId: recordData.zFieldId,\n      };\n\n      this.gasService.addProductionRecord(newData).subscribe({\n        next: () => {\n          this.onSubmitSuccess('Production record added successfully!');\n        },\n        error: (error) => {\n          console.error('Error adding record:', error);\n          this.isSubmitting = false;\n          this.toastService.error(\n            'Failed to add production record. Please try again.'\n          );\n        },\n      });\n    }\n  }\n\n  onSubmitSuccess(message: string): void {\n    this.loadRecords();\n    this.resetForm();\n    this.isFormVisible = false;\n    this.isSubmitting = false;\n    this.toastService.success(message);\n  }\n\n  editRecord(record: ProductionRecord): void {\n    this.isEditMode = true;\n    this.selectedRecord = record;\n\n    // Set form visible without toggling if not already visible\n    if (!this.isFormVisible) {\n      this.isFormVisible = true;\n    }\n\n    this.recordForm.patchValue({\n      productionRecordGuid: record.productionRecordGuid,\n      dateOfProduction: this.formatDateForInput(record.dateOfProduction),\n      productionOfCost: record.productionOfCost,\n      productionRate: record.productionRate,\n      zFieldId: record.zFieldId,\n    });\n  }\n\n  showDeleteConfirmationDialog(record: ProductionRecord): void {\n    this.recordToDelete = record;\n    this.showDeleteConfirmation = true;\n  }\n\n  onConfirmDelete(): void {\n    if (this.recordToDelete) {\n      this.performDeleteRecord(this.recordToDelete);\n    }\n    this.showDeleteConfirmation = false;\n    this.recordToDelete = null;\n  }\n\n  onCancelDelete(): void {\n    this.showDeleteConfirmation = false;\n    this.recordToDelete = null;\n  }\n\n  deleteRecord(record: ProductionRecord): void {\n    this.showDeleteConfirmationDialog(record);\n  }\n\n  performDeleteRecord(record: ProductionRecord): void {\n    this.gasService\n      .deleteProductionRecord(record.productionRecordGuid)\n      .subscribe({\n        next: () => {\n          this.loadRecords();\n          this.toastService.success(\n            `Production record for ${record.fieldName} has been deleted.`\n          );\n        },\n        error: (error) => {\n          console.error('Error deleting record:', error);\n          this.toastService.error(\n            'Failed to delete production record. Please try again.'\n          );\n        },\n      });\n  }\n\n  onFileSelected(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length) {\n      this.selectedFile = input.files[0];\n    }\n  }\n\n  uploadFile(): void {\n    if (!this.selectedFile) {\n      this.toastService.warning('Please select a file first.');\n      return;\n    }\n\n    this.isLoading = true;\n    this.importMessage = '';\n\n    this.gasService.importProductionRecords(this.selectedFile).subscribe({\n      next: (count) => {\n        this.importMessage = `Successfully imported ${count} records.`;\n        this.loadRecords();\n        this.isLoading = false;\n        this.selectedFile = null;\n        const fileInput = document.getElementById(\n          'fileInput'\n        ) as HTMLInputElement;\n        if (fileInput) {\n          fileInput.value = '';\n        }\n        this.toastService.success(\n          `Successfully imported ${count} production records.`\n        );\n      },\n      error: (error) => {\n        console.error('Error importing records:', error);\n        this.importMessage =\n          'Error importing records. Please check the file format.';\n        this.isLoading = false;\n        this.toastService.error(\n          'Failed to import records. Please check the file format and try again.'\n        );\n      },\n    });\n  }\n\n  formatDateForInput(dateString: string): string {\n    const date = new Date(dateString);\n    return date.toISOString().split('T')[0];\n  }\n\n  getFieldName(fieldId: number): string {\n    const field = this.fields.find((f) => f.zFieldId === fieldId);\n    return field ? field.name : 'Unknown';\n  }\n\n  // Helper method to mark all controls in a form group as touched\n  markFormGroupTouched(formGroup: FormGroup): void {\n    Object.values(formGroup.controls).forEach((control) => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n  // Helper methods for select options\n  getFieldOptions() {\n    return this.fieldOptions;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n}\n", "<div class=\"p-4 bg-gray-50 dark:bg-gray-800 min-h-screen\">\n  <div class=\"mb-6 flex justify-between items-center\">\n    <div>\n      <h1 class=\"text-3xl font-bold text-gray-900 dark:text-white\">\n        Production Records\n      </h1>\n      <p class=\"mt-1 text-gray-600 dark:text-gray-300\">\n        Manage gas condensate production records\n      </p>\n    </div>\n    <div>\n      <button\n        (click)=\"toggleForm()\"\n        class=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n      >\n        {{ isFormVisible ? \"Cancel\" : \"Add New Record\" }}\n      </button>\n    </div>\n  </div>\n\n  <!-- Form Section -->\n  <div\n    *ngIf=\"isFormVisible\"\n    class=\"bg-white dark:bg-gray-700 p-6 rounded-lg shadow mb-6\"\n  >\n    <h2 class=\"text-xl font-semibold text-gray-800 dark:text-white mb-4\">\n      {{ isEditMode ? \"Edit Production Record\" : \"Add Production Record\" }}\n    </h2>\n\n    <form\n      [formGroup]=\"recordForm\"\n      (ngSubmit)=\"onSubmit()\"\n      class=\"grid grid-cols-1 md:grid-cols-2 gap-6\"\n    >\n      <input type=\"hidden\" formControlName=\"productionRecordGuid\" />\n\n      <div>\n        <app-label [label]=\"'Date of Production'\" [required]=\"true\"></app-label>\n        <app-date-picker\n          [placeholder]=\"'Select date'\"\n          [required]=\"true\"\n          [errorMessage]=\"'Date is required'\"\n          formControlName=\"dateOfProduction\"\n        ></app-date-picker>\n      </div>\n\n      <div>\n        <app-zsk-select\n          [label]=\"'Field'\"\n          [required]=\"true\"\n          [placeholder]=\"'Select field'\"\n          [options]=\"getFieldOptions()\"\n          formControlName=\"zFieldId\"\n          [id]=\"'field'\"\n          [name]=\"'field'\"\n        ></app-zsk-select>\n      </div>\n\n      <div>\n        <app-text-input\n          [label]=\"'Production Rate'\"\n          [required]=\"true\"\n          [type]=\"'number'\"\n          [placeholder]=\"'Enter production rate'\"\n          formControlName=\"productionRate\"\n          [id]=\"'productionRate'\"\n          [name]=\"'productionRate'\"\n          [errorMessage]=\"'Production rate is required'\"\n        ></app-text-input>\n      </div>\n\n      <div>\n        <app-text-input\n          [label]=\"'Production Cost'\"\n          [required]=\"true\"\n          [type]=\"'number'\"\n          [placeholder]=\"'Enter cost'\"\n          formControlName=\"productionOfCost\"\n          [id]=\"'productionOfCost'\"\n          [name]=\"'productionOfCost'\"\n          [errorMessage]=\"'Production cost is required'\"\n        ></app-text-input>\n      </div>\n\n      <div class=\"md:col-span-2 flex justify-end\">\n        <button\n          type=\"button\"\n          (click)=\"toggleForm()\"\n          class=\"mr-2 px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-600\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          [disabled]=\"recordForm.invalid || isSubmitting\"\n          class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\n        >\n          {{ isSubmitting ? \"Saving...\" : isEditMode ? \"Update\" : \"Save\" }}\n        </button>\n      </div>\n    </form>\n  </div>\n\n  <!-- Filter Section -->\n  <div class=\"bg-white dark:bg-gray-700 p-4 rounded-lg shadow mb-6\">\n    <h2 class=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">\n      Filter Records\n    </h2>\n\n    <form\n      [formGroup]=\"filterForm\"\n      class=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-6 gap-4\"\n    >\n      <div>\n        <app-text-input\n          [label]=\"'Search'\"\n          [placeholder]=\"'Search...'\"\n          formControlName=\"search\"\n        ></app-text-input>\n      </div>\n\n      <div>\n        <app-zsk-select\n          [label]=\"'Field'\"\n          [placeholder]=\"'All fields'\"\n          [options]=\"getFieldOptions()\"\n          formControlName=\"zFieldId\"\n        ></app-zsk-select>\n      </div>\n\n      <div>\n        <app-label [label]=\"'Start Date'\"></app-label>\n        <app-date-picker\n          [placeholder]=\"'Select start date'\"\n          formControlName=\"startDate\"\n        ></app-date-picker>\n      </div>\n\n      <div>\n        <app-label [label]=\"'End Date'\"></app-label>\n        <app-date-picker\n          [placeholder]=\"'Select end date'\"\n          formControlName=\"endDate\"\n        ></app-date-picker>\n      </div>\n\n      <div>\n        <app-text-input\n          [label]=\"'Min Production Rate'\"\n          [type]=\"'number'\"\n          [placeholder]=\"'Min'\"\n          formControlName=\"minProductionRate\"\n        ></app-text-input>\n      </div>\n\n      <div>\n        <app-text-input\n          [label]=\"'Year'\"\n          [type]=\"'number'\"\n          [placeholder]=\"'YYYY'\"\n          formControlName=\"year\"\n        ></app-text-input>\n      </div>\n    </form>\n  </div>\n\n  <!-- Records Table -->\n  <div class=\"bg-white dark:bg-gray-700 rounded-lg shadow overflow-hidden\">\n    <div class=\"overflow-x-auto\">\n      <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\">\n        <thead class=\"bg-gray-50 dark:bg-gray-800\">\n          <tr>\n            <th\n              scope=\"col\"\n              class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\"\n              (click)=\"onSort('dateOfProduction')\"\n            >\n              Date\n              <span *ngIf=\"sortColumn === 'dateOfProduction'\" class=\"ml-1\">\n                {{ sortDirection === \"asc\" ? \"↑\" : \"↓\" }}\n              </span>\n            </th>\n            <th\n              scope=\"col\"\n              class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\"\n              (click)=\"onSort('fieldName')\"\n            >\n              Field\n              <span *ngIf=\"sortColumn === 'fieldName'\" class=\"ml-1\">\n                {{ sortDirection === \"asc\" ? \"↑\" : \"↓\" }}\n              </span>\n            </th>\n            <th\n              scope=\"col\"\n              class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\"\n              (click)=\"onSort('productionRate')\"\n            >\n              Production Rate\n              <span *ngIf=\"sortColumn === 'productionRate'\" class=\"ml-1\">\n                {{ sortDirection === \"asc\" ? \"↑\" : \"↓\" }}\n              </span>\n            </th>\n            <th\n              scope=\"col\"\n              class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\"\n              (click)=\"onSort('productionOfCost')\"\n            >\n              Cost\n              <span *ngIf=\"sortColumn === 'productionOfCost'\" class=\"ml-1\">\n                {{ sortDirection === \"asc\" ? \"↑\" : \"↓\" }}\n              </span>\n            </th>\n            <th\n              scope=\"col\"\n              class=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\"\n            >\n              Actions\n            </th>\n          </tr>\n        </thead>\n        <tbody\n          class=\"bg-white dark:bg-gray-700 divide-y divide-gray-200 dark:divide-gray-600\"\n        >\n          <tr *ngIf=\"isLoading\" class=\"animate-pulse\">\n            <td\n              colspan=\"5\"\n              class=\"px-6 py-4 whitespace-nowrap text-center text-gray-500 dark:text-gray-300\"\n            >\n              Loading...\n            </td>\n          </tr>\n          <tr\n            *ngIf=\"\n              !isLoading &&\n              (!productionRecords || productionRecords.length === 0)\n            \"\n            class=\"hover:bg-gray-100 dark:hover:bg-gray-600\"\n          >\n            <td\n              colspan=\"5\"\n              class=\"px-6 py-4 whitespace-nowrap text-center text-gray-500 dark:text-gray-300\"\n            >\n              No records found\n            </td>\n          </tr>\n          <tr\n            *ngFor=\"let record of productionRecords\"\n            class=\"hover:bg-gray-100 dark:hover:bg-gray-600\"\n          >\n            <td\n              class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\"\n            >\n              {{ record.dateOfProduction | date : \"MMM d, yyyy\" }}\n            </td>\n            <td\n              class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\"\n            >\n              {{ record.fieldName }}\n            </td>\n            <td\n              class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\"\n            >\n              {{ record.productionRate }}\n            </td>\n            <td\n              class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\"\n            >\n              ${{ record.productionOfCost | number : \"1.2-2\" }}\n            </td>\n            <td\n              class=\"px-6 py-4 whitespace-nowrap text-sm text-right space-x-1\"\n            >\n              <button\n                (click)=\"editRecord(record)\"\n                class=\"px-3 py-1.5 text-xs bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                Edit\n              </button>\n              <button\n                (click)=\"deleteRecord(record)\"\n                *appHasRole=\"[role.ADMIN]\"\n                class=\"px-3 py-1.5 text-xs bg-red-600 text-white rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Pagination -->\n    <div\n      class=\"px-6 py-3 flex items-center justify-between border-t border-gray-200 dark:border-gray-600\"\n    >\n      <div class=\"text-sm text-gray-700 dark:text-gray-300\">\n        Showing\n        <span class=\"font-medium\">{{\n          (pagination.currentPage - 1) * pagination.itemsPerPage + 1\n        }}</span>\n        to\n        <span class=\"font-medium\">{{\n          Math.min(\n            pagination.currentPage * pagination.itemsPerPage,\n            pagination.totalItems\n          )\n        }}</span>\n        of <span class=\"font-medium\">{{ pagination.totalItems }}</span> results\n      </div>\n      <div class=\"flex space-x-2\">\n        <button\n          (click)=\"onPageChange(pagination.currentPage - 1)\"\n          [disabled]=\"pagination.currentPage === 1\"\n          class=\"px-3 py-1 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-600 disabled:opacity-50\"\n        >\n          Previous\n        </button>\n        <button\n          (click)=\"onPageChange(pagination.currentPage + 1)\"\n          [disabled]=\"pagination.currentPage === pagination.totalPages\"\n          class=\"px-3 py-1 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-600 disabled:opacity-50\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Confirmation Dialog -->\n  <app-confirm-dialog\n    [visible]=\"showDeleteConfirmation\"\n    [title]=\"'Confirm Delete'\"\n    [message]=\"\n      recordToDelete\n        ? 'Are you sure you want to delete the production record for ' +\n          recordToDelete.fieldName +\n          '?'\n        : 'Are you sure you want to delete this record?'\n    \"\n    [confirmText]=\"'Delete'\"\n    [cancelText]=\"'Cancel'\"\n    (confirm)=\"onConfirmDelete()\"\n    (cancel)=\"onCancelDelete()\"\n  ></app-confirm-dialog>\n</div>\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onSubmit", "\u0275\u0275element", "toggleForm", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "isEditMode", "\u0275\u0275property", "recordForm", "getFieldOptions", "invalid", "isSubmitting", "sortDirection", "_r5", "record_r4", "$implicit", "deleteRecord", "_r3", "editRecord", "\u0275\u0275template", "ProductionRecordsComponent_tr_51_button_14_Template", "\u0275\u0275pipeBind2", "dateOfProduction", "fieldName", "productionRate", "productionOfCost", "\u0275\u0275pureFunction1", "_c0", "role", "ADMIN", "ProductionRecordsComponent", "gasService", "zskService", "fb", "toastService", "Math", "Roles", "productionRecords", "pagination", "currentPage", "itemsPerPage", "totalItems", "totalPages", "fields", "filterForm", "selectedRecord", "isLoading", "isFormVisible", "sortColumn", "selectedFile", "importMessage", "subscriptions", "fieldOptions", "showDeleteConfirmation", "recordToDelete", "constructor", "ngOnInit", "initForms", "loadFilterOptions", "setTimeout", "loadRecords", "group", "productionRecordGuid", "Validators", "required", "min", "zFieldId", "search", "startDate", "endDate", "minProductionRate", "maxProductionRate", "year", "filterSubscription", "valueChanges", "pipe", "debounceTime", "subscribe", "push", "getFields", "next", "map", "field", "value", "label", "name", "error", "console", "filters", "getProductionRecordsWithFilter", "response", "result", "data", "onPageChange", "page", "onSort", "column", "isNew", "resetForm", "reset", "markFormGroupTouched", "warning", "recordData", "updateData", "updateProductionRecord", "onSubmitSuccess", "newData", "addProductionRecord", "message", "success", "record", "patchValue", "formatDateForInput", "showDeleteConfirmationDialog", "onConfirmDelete", "performDeleteRecord", "onCancelDelete", "deleteProductionRecord", "onFileSelected", "event", "input", "target", "files", "length", "uploadFile", "importProductionRecords", "count", "fileInput", "document", "getElementById", "dateString", "Date", "toISOString", "split", "getFieldName", "fieldId", "find", "f", "formGroup", "Object", "values", "controls", "forEach", "control", "markAsTouched", "FormGroup", "ngOnDestroy", "sub", "unsubscribe", "\u0275\u0275directiveInject", "GasService", "ZskService", "FormBuilder", "ToastService", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "ProductionRecordsComponent_div_10_Template", "ProductionRecordsComponent_span_36_Template", "ProductionRecordsComponent_span_39_Template", "ProductionRecordsComponent_span_42_Template", "ProductionRecordsComponent_span_45_Template", "ProductionRecordsComponent_tr_49_Template", "ProductionRecordsComponent_tr_50_Template", "ProductionRecordsComponent_tr_51_Template", "\u0275\u0275textInterpolate", "CommonModule", "NgForOf", "NgIf", "DecimalPipe", "DatePipe", "ReactiveFormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "RequiredValidator", "FormGroupDirective", "FormControlName", "TextInputComponent", "DatePickerComponent", "LabelComponent", "ZskSelectComponent", "ConfirmDialogComponent", "HasRoleDirective", "styles"]
}
