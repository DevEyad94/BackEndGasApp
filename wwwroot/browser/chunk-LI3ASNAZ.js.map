{
  "version": 3,
  "sources": ["src/app/core/enum/roles.enum.ts", "src/app/shared/directives/hasRole.directive.ts", "src/app/shared/services/toast.service.ts"],
  "sourcesContent": ["export enum Roles {\n  ADMIN = 'Admin',\n  ENGINEER = 'Engineer',\n  OPERATOR = 'Operator',\n}\n", "import {\n  Directive,\n  Input,\n  ViewContainerRef,\n  TemplateRef,\n  OnInit,\n  OnDestroy\n} from \"@angular/core\";\nimport { take, takeUntil } from \"rxjs/operators\";\nimport { Subject } from \"rxjs\";\nimport { AuthService } from \"../services/auth.service\";\nimport { User } from \"../../models/user.model\";\n\n@Directive({\n  selector: \"[appHasRole]\",\n  standalone: true\n})\nexport class HasRoleDirective implements OnInit, OnDestroy {\n  @Input() appHasRole: string[] = [];\n  isVisible = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    // Initial check with user state\n    console.log(this.appHasRole);\n    this.authService.currentUser$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(this.updateView.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private updateView(user: User | null | undefined): void {\n    // Clear view initially\n    this.viewContainerRef.clear();\n\n    // Check if user is logged in and has a token\n    if (user?.token) {\n      // Check if any of the required roles match the user's roles\n      if (this.appHasRole && this.appHasRole.length > 0) {\n        console.log(user);\n\n        // Check if user has any of the required roles\n        const hasRequiredRole = this.appHasRole.some(role =>\n          user.role.some((userRole: string) => userRole === role)\n        );\n\n        if (hasRequiredRole && !this.isVisible) {\n          this.isVisible = true;\n          this.viewContainerRef.createEmbeddedView(this.templateRef);\n        }\n      }\n    } else if (this.isVisible) {\n      // User is not logged in, hide content\n      this.isVisible = false;\n      this.viewContainerRef.clear();\n    }\n  }\n}\n", "import { Injectable, Renderer2, RendererFactory2, inject, PLATFORM_ID, NgZone } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  private renderer: Renderer2;\n  private toastContainer: HTMLElement | null = null;\n  private isBrowser: boolean;\n  private ngZone: NgZone;\n\n  constructor(rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n    this.isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n    this.ngZone = inject(NgZone);\n    console.log('Toast service initialized, isBrowser:', this.isBrowser);\n  }\n\n  private createToastContainer(): HTMLElement {\n    if (!this.isBrowser) {\n      console.log('‚õî Not running in browser, skipping toast creation');\n      // Return a dummy element when not in browser\n      return this.renderer.createElement('div');\n    }\n\n    if (!this.toastContainer) {\n      console.log('üì¶ Creating toast container');\n      this.toastContainer = this.renderer.createElement('div');\n      this.renderer.setAttribute(this.toastContainer, 'class', 'fixed top-4 right-4 z-50 space-y-2');\n      this.renderer.setAttribute(this.toastContainer, 'id', 'toast-container');\n\n      // Run inside ngZone to ensure change detection\n      this.ngZone.run(() => {\n        if (document && document.body) {\n          console.log('üìå Appending toast container to document body');\n          this.renderer.appendChild(document.body, this.toastContainer);\n        } else {\n          console.log('‚ö†Ô∏è Document body not available');\n        }\n      });\n    }\n    // Non-null assertion as we ensure toastContainer is created above\n    return this.toastContainer!;\n  }\n\n  success(message: string, title?: string): void {\n    console.log('‚úÖ Success toast called:', message, title);\n    this.showToast(message, title, 'success');\n  }\n\n  error(message: string, status?: number): void {\n    console.log('üî¥ Error toast called:', message, status);\n    const title = status ? `Error ${status}` : 'Error';\n    this.showToast(message, title, 'error');\n  }\n\n  info(message: string, title?: string): void {\n    console.log('‚ÑπÔ∏è Info toast called:', message, title);\n    this.showToast(message, title, 'info');\n  }\n\n  warning(message: string, title?: string): void {\n    console.log('‚ö†Ô∏è Warning toast called:', message, title);\n    this.showToast(message, title, 'warning');\n  }\n\n  private showToast(message: string, title?: string, type: 'success' | 'error' | 'info' | 'warning' = 'info'): void {\n    if (!this.isBrowser) {\n      console.log('‚õî Not showing toast because not in browser');\n      return;\n    }\n\n    console.log('üîî Showing toast:', { message, title, type });\n    const container = this.createToastContainer();\n    console.log('üì¶ Toast container element:', container);\n\n    // Map type to icon and color\n    let iconClass = '';\n    let bgClass = '';\n    let iconHTML = '';\n\n    // Check if document language is Arabic/RTL\n    const isRTL = document?.documentElement?.dir === 'rtl' ||\n                 document?.documentElement?.lang === 'ar' ||\n                 document?.body?.classList.contains('rtl');\n\n    const rtlClass = isRTL ? 'rtl' : '';\n    const marginClass = isRTL ? 'ml-3' : 'mr-3';\n\n    switch (type) {\n      case 'success':\n        bgClass = 'bg-pdo-green-light';\n        iconHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-6 h-6\"><path fill-rule=\"evenodd\" d=\"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm13.36-1.814a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z\" clip-rule=\"evenodd\" /></svg>';\n        break;\n      case 'error':\n        bgClass = 'bg-red-500';\n        iconHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-6 h-6\"><path fill-rule=\"evenodd\" d=\"M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-1.72 6.97a.75.75 0 10-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 101.06 1.06L12 13.06l1.72 1.72a.75.75 0 101.06-1.06L13.06 12l1.72-1.72a.75.75 0 10-1.06-1.06L12 10.94l-1.72-1.72z\" clip-rule=\"evenodd\" /></svg>';\n        break;\n      case 'info':\n        bgClass = 'bg-blue-500';\n        iconHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-6 h-6\"><path fill-rule=\"evenodd\" d=\"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm8.706-1.442c1.146-.573 2.437.463 2.126 1.706l-.709 2.836.042-.02a.75.75 0 01.67 1.34l-.04.022c-1.147.573-2.438-.463-2.127-1.706l.71-2.836-.042.02a.75.75 0 11-.671-1.34l.041-.022zM12 9a.75.75 0 100-1.5.75.75 0 000 1.5z\" clip-rule=\"evenodd\" /></svg>';\n        break;\n      case 'warning':\n        bgClass = 'bg-yellow-500';\n        iconHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-6 h-6\"><path fill-rule=\"evenodd\" d=\"M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z\" clip-rule=\"evenodd\" /></svg>';\n        break;\n    }\n\n    // Create toast element with new design\n    const toastEl = this.renderer.createElement('div');\n    this.renderer.setAttribute(\n      toastEl,\n      'class',\n      `flex w-full max-w-md items-center p-4 mb-4 rounded-lg shadow-lg\n      transition-all duration-300 ease-in-out transform\n      bg-white dark:bg-gray-800 text-gray-800 dark:text-gray-100\n      ${type === 'success' ? 'border border-pdo-green/20' : ''} ${rtlClass}`\n    );\n\n    // Icon container\n    const iconContainer = this.renderer.createElement('div');\n    this.renderer.setAttribute(iconContainer, 'class', `flex-shrink-0 ${bgClass} text-white p-2 rounded-full ${marginClass}`);\n\n    // Set icon HTML\n    iconContainer.innerHTML = iconHTML;\n\n    // Content container\n    const contentDiv = this.renderer.createElement('div');\n    this.renderer.setAttribute(contentDiv, 'class', 'flex-1');\n\n    // Add title if provided\n    if (title) {\n      const titleEl = this.renderer.createElement('h3');\n      this.renderer.setAttribute(titleEl, 'class', 'font-medium text-gray-900 dark:text-gray-100');\n      const titleText = this.renderer.createText(title);\n      this.renderer.appendChild(titleEl, titleText);\n      this.renderer.appendChild(contentDiv, titleEl);\n    }\n\n    // Add message\n    const messageEl = this.renderer.createElement('div');\n    this.renderer.setAttribute(messageEl, 'class', 'text-sm text-gray-600 dark:text-gray-300');\n    const messageText = this.renderer.createText(message);\n    this.renderer.appendChild(messageEl, messageText);\n    this.renderer.appendChild(contentDiv, messageEl);\n\n    // Close button\n    const closeBtn = this.renderer.createElement('button');\n    this.renderer.setAttribute(\n      closeBtn,\n      'class',\n      `${isRTL ? 'mr-auto' : 'ml-auto'} -mx-1.5 -my-1.5 bg-white dark:bg-gray-800 text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-lg p-1.5 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none`\n    );\n\n    const closeIcon = this.renderer.createElement('span');\n    closeIcon.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" /></svg>';\n    this.renderer.appendChild(closeBtn, closeIcon);\n\n    // Add event listener for close button\n    this.renderer.listen(closeBtn, 'click', () => {\n      this.removeToast(toastEl);\n    });\n\n    // Append children to toast\n    if (isRTL) {\n      // For RTL: close button, content, icon\n      this.renderer.appendChild(toastEl, closeBtn);\n      this.renderer.appendChild(toastEl, contentDiv);\n      this.renderer.appendChild(toastEl, iconContainer);\n    } else {\n      // For LTR: icon, content, close button (default)\n      this.renderer.appendChild(toastEl, iconContainer);\n      this.renderer.appendChild(toastEl, contentDiv);\n      this.renderer.appendChild(toastEl, closeBtn);\n    }\n\n    // Add to container\n    this.renderer.appendChild(container, toastEl);\n\n    // Auto-remove after 5 seconds\n    setTimeout(() => {\n      this.removeToast(toastEl);\n    }, 5000);\n  }\n\n  private removeToast(toastEl: HTMLElement): void {\n    if (this.toastContainer?.contains(toastEl)) {\n      this.renderer.addClass(toastEl, 'opacity-0');\n      this.renderer.addClass(toastEl, '-translate-x-full');\n\n      setTimeout(() => {\n        if (this.toastContainer?.contains(toastEl)) {\n          this.renderer.removeChild(this.toastContainer, toastEl);\n        }\n      }, 300);\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": ["Roles", "HasRoleDirective", "viewContainerRef", "templateRef", "authService", "appHasRole", "isVisible", "destroy$", "Subject", "constructor", "ngOnInit", "console", "log", "currentUser$", "pipe", "takeUntil", "subscribe", "updateView", "bind", "ngOnDestroy", "next", "complete", "user", "clear", "token", "length", "some", "role", "userRole", "createEmbeddedView", "\u0275\u0275directiveInject", "ViewContainerRef", "TemplateRef", "AuthService", "selectors", "inputs", "ToastService", "renderer", "toastContainer", "isBrowser", "ngZone", "constructor", "rendererFactory", "createRenderer", "isPlatformBrowser", "inject", "PLATFORM_ID", "NgZone", "console", "log", "createToastContainer", "createElement", "setAttribute", "run", "document", "body", "appendChild", "success", "message", "title", "showToast", "error", "status", "info", "warning", "type", "container", "iconClass", "bgClass", "iconHTML", "isRTL", "documentElement", "dir", "lang", "classList", "contains", "rtlClass", "marginClass", "toastEl", "iconContainer", "innerHTML", "contentDiv", "titleEl", "titleText", "createText", "messageEl", "messageText", "closeBtn", "closeIcon", "listen", "removeToast", "setTimeout", "addClass", "removeChild", "\u0275\u0275inject", "RendererFactory2", "factory", "\u0275fac", "providedIn"]
}
